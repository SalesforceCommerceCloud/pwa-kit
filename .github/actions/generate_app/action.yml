name: generate_app
inputs:
  use_extensibility:
    description: Use Extensibility?
  project_name:
    description: Project Name
  instance_url:
    description: Instance Url
  org_id:
    description: Org Id
  short_code:
    description: Short Code
  client_id:
    description: Client Id
  site_id:
    description: Site Id
  is_private_client:
    description: Is Private Client?
  setup_hybrid:
    description: Setup Phased Headless rollout?
  project_dir:
    description: Project Directory

description: Generate
runs:
  using: composite
  steps:
    - name: Parse input values
      shell: bash
      run: |
        use_extensibility_input="${{ github.event.inputs.use_extensibility }}"
        if [ "use_extensibility_input" = "true" ]; then
         use_extensibility_value=2
        else
         use_extensibility_value=1
        fi
        echo "USE_EXTENSIBILITY_VALUE=$use_extensibility_value" >> $GITHUB_ENV 
        
        is_private_client_input="${{ github.event.inputs.is_private_client }}"
        if [ "$isPrivateClient_input" = "true" ]; then
         is_private_client_value=1
        else
          is_private_client_value=2
        fi
        echo "IS_PRIVATE_CLIENT_VALUE=$is_private_client_value" >> $GITHUB_ENV
        
        setup_hybrid_input="${{ github.event.inputs.setup_hybrid }}"
        if [ "$setup_hybrid_input" = "true" ]; then
          setup_hybrid_value=2
        else
          setup_hybrid_value=1
        fi
        echo "SETUP_HYBRID_VALUE=$setup_hybrid_value" >> $GITHUB_ENV]

    - name: Build project generator inputs
      shell: bash
      run: |
        echo '[
          {
            "expectedPrompt": "Choose a project preset to get started:",
            "response": "1\n"
          },
          {
            "expectedPrompt": "Do you wish to use template extensibility?",
            "response": "${{ env.USE_EXTENSIBILITY_VALUE }}\n"
          },
          {
            "expectedPrompt": "What is the name of your Project?",
            "response": "${{ github.event.inputs.project_name }}\n"
          },
          {
            "expectedPrompt": "What is the URL for your Commerce Cloud instance?",
            "response": "${{ github.event.inputs.instance_url }}\n"
          },
          {
            "expectedPrompt": "What is your SLAS Client ID?",
            "response": "${{ github.event.inputs.client_id }}\n"
          },
          {
            "expectedPrompt": "Is your SLAS client private?",
            "response":"${{ env.IS_PRIVATE_CLIENT_VALUE }}\n"
          },
          {
            "expectedPrompt": "What is your Site ID in Business Manager?",
            "response": "${{ github.event.inputs.site_id }}\n"
          },
          {
            "expectedPrompt": "What is your Commerce API organization ID in Business Manager?",
            "response": "${{ github.event.inputs.org_id }}\n"
          },
          {
            "expectedPrompt": "What is your Commerce API short code in Business Manager?",
            "response": "${{ github.event.inputs.short_code }}\n"
          },
          {
            "expectedPrompt": "Do you wish to set up a phased headless rollout?",
            "response": "${{ env.SETUP_HYBRID_VALUE }}\n"
          }
        ]' > generator-responses.json

    - name: Generate new project
      run: |
        cat generator-responses.json
        node e2e/scripts/generate-project.js "$(jq -c . generator-responses.json)"
      shell: bash

    - name: Build Generated PWA
      working-directory: ../generated-projects/${{ github.event.inputs.project_dir }}
      run: |-
        npm ci
        npm run build
      shell: bash
