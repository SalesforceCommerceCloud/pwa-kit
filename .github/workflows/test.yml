# WARNING! Conditionals are set as variables to minimize repetitive checks.
# However, this results in the variables being the *string* values "true" or "false".
# As a result, you must always explicitly check for those strings. For example,
# ${{ env.DEVELOP }} will ALWAYS evaluate as true; to achieve the expected result
# you must check ${{ env.DEVELOP == 'true' }}. There's probably a better way to DRY,
# but this is what we have for now.

name: SalesforceCommerceCloud/pwa-kit/test
on:
  # PRs from forks trigger `pull_request`, but do NOT have access to secrets.
  # More info:
  # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#workflows-in-forked-repositories-1
  # https://securitylab.github.com/research/github-actions-preventing-pwn-requests/
  # https://docs.github.com/en/actions/managing-workflow-runs/approving-workflow-runs-from-public-forks
  pull_request: # Default: opened, reopened, synchronize (head branch updated)
  merge_group: # Trigger GA workflow when a pull request is added to a merge queue.
  push:
    branches:
      - develop
      # TODO: Should we run on all pushes to release branches, or should we run on GitHub releases?
      - 'release-*'
  schedule:
    # Run every day at 12am (PST) - cron uses UTC times
    - cron: '0 8 * * *'
env:
  IS_NOT_FORK: ${{ github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository }}
  DEVELOP: ${{ (github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository) && (github.head_ref || github.ref_name) == 'develop' }}
  RELEASE: ${{ (github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository) && startsWith(github.head_ref || github.ref_name, 'release-') }}

jobs:
  # TODO: The generated workflow is identical to the generated-windows workflow,
  # with a few extra steps. Can the workflows be merged? (Add `os` to the matrix?)
  generated:
    strategy:
      fail-fast: false
      matrix:
        template: [express-minimal-test-project]
    runs-on: ubuntu-latest
    env:
      IS_TEMPLATE_FROM_RETAIL_REACT_APP: ${{ matrix.template == 'retail-react-app-test-project' || matrix.template == 'retail-react-app-demo' }}
      PROJECT_DIR: generated-${{ matrix.template }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Setup Ubuntu Machine
        uses: "./.github/actions/setup_ubuntu"

      - name: Generate ${{ matrix.template }} project
        run: |-
          node packages/pwa-kit-create-app/scripts/create-mobify-app-dev.js --outputDir ${{ env.PROJECT_DIR }}
        env:
          GENERATOR_PRESET: ${{ matrix.template }}
        timeout-minutes: 8

      - name: Store Verdaccio logfile artifact
        uses: actions/upload-artifact@v3
        with:
          path: packages/pwa-kit-create-app/local-npm-repo/verdaccio.log

      # TODO: Ticket W-12425059. Revisit Snyk CLI integration to monitor manifest files on generated projects.
      # TODO: Update the SNYK_TOKEN stored in GitHub with a token generated from the proper Snyk org.
      #      - name: Audit Generated Project
      #        if: env.IS_NOT_FORK == 'true' && env.IS_TEMPLATE_FROM_RETAIL_REACT_APP == 'true' && env.DEVELOP == 'true'
      #        uses: "./.github/actions/snyk"
      #        with:
      #          snyk_token: ${{ secrets.SNYK_TOKEN }}

#      - name: Create MRT credentials file
#        if: env.IS_NOT_FORK == 'true' && env.IS_TEMPLATE_FROM_RETAIL_REACT_APP == 'true'
#        uses: "./.github/actions/create_mrt"
#        with:
#          mobify_user: ${{ secrets.MOBIFY_CLIENT_USER }}
#          mobify_api_key: ${{ secrets.MOBIFY_CLIENT_API_KEY }}

      - name: Build project
        if: env.IS_NOT_FORK == 'true' && matrix.template == 'express-minimal-test-project'
        uses: "./.github/actions/push_to_mrt"
        with:
          CWD: ${{ env.PROJECT_DIR }}
          TARGET: production
