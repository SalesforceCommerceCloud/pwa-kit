# WARNING! Conditionals are set as variables to minimize repetitive checks.
# However, this results in the variables being the *string* values "true" or "false".
# As a result, you must always explicitly check for those strings. For example,
# ${{ env.DEVELOP }} will ALWAYS evaluate as true; to achieve the expected result
# you must check ${{ env.DEVELOP == 'true' }}. There's probably a better way to DRY,
# but this is what we have for now.

name: SalesforceCommerceCloud/pwa-kit/test
on:
  workflow_dispatch:
    inputs:
      extend:
        type: boolean
        description: extend
        default: true
      name:
        type: string
        description: name
        default: 'scaffold-pwa'
      instanceUrl:
        type: string
        description: instanceUrl
        default: 'https://zzrf-002.dx.commercecloud.salesforce.com'
      orgId:
        type: string
        description: orgId
        default: 'f_ecom_zzrf_002'
      shortCode:
        type: string
        description: shortCode
        default: 'kv7kzm78'
      clientId:
        type: string
        description: clientId
        default: '987fc116-d30c-4537-93cb-c2bd433c3b5a'
      siteId:
        type: string
        description: siteId
        default: 'RefArch'
      isPrivateClient:
        type: boolean
        description: isPrivateClient
        default: false
      hybrid:
        type: boolean
        description: hybrid
        default: false
env:
  IS_NOT_FORK: ${{ github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository }}
  DEVELOP: ${{ (github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository) && (github.head_ref || github.ref_name) == 'develop' }}
  RELEASE: ${{ (github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository) && startsWith(github.head_ref || github.ref_name, 'release-') }}

jobs:

  pwa-kit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build project generator inputs
        run: |
          echo '[
          {
           expectedPrompt: /Choose a project preset to get started:/i,
           response: "1\n"
          },
          {
            expectedPrompt: /Do you wish to use template extensibility?/i,
            response: "${{ github.event.inputs.extend }}",
          },
          {
            expectedPrompt: /What is the name of your Project?/i,
            response: "${{ github.event.inputs.name }}",
          },
          {
            expectedPrompt: /What is the URL for your Commerce Cloud instance?/i,
            response: "${{ github.event.inputs.instanceUrl }}",
          },
          {
            expectedPrompt: /What is your SLAS Client ID?/i,
            response: "${{ github.event.inputs.clientId }}",
          },
          {
            expectedPrompt: /Is your SLAS client private?/i,
            response: "${{ github.event.inputs.isPrivateClient }}",
          },
          {
            expectedPrompt: /What is your Site ID in Business Manager?/i,
            response: "${{ github.event.inputs.siteId }}",
          },
          {
            expectedPrompt: /What is your Commerce API organization ID in Business Manager?/i,
            response: "${{ github.event.inputs.orgId }}",
          },
          {
            expectedPrompt: /What is your Commerce API short code in Business Manager?/i,
            response: "${{ github.event.inputs.shortCode }}",
          },
          {
            expectedPrompt: /Do you wish to set up a phased headless rollout?/i,
            response: "${{ github.event.inputs.hybrid }}",
          }
          ]' > generator-responses.json
      - name: Generate new project
        run: |
          cat generator-responses.json
          #node e2e/scripts/generate-project.js "$(cat myjson.json)"



